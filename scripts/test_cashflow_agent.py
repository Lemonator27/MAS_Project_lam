import os
import sys
from datetime import datetime

# Ensure project root is on sys.path
ROOT = os.path.abspath(os.path.join(os.path.dirname(__file__), os.pardir))
if ROOT not in sys.path:
    sys.path.insert(0, ROOT)

from agents.cashflow_agent import CashFlowAgentExecutor

def test_cashflow_agent():
    """Test the enhanced cash flow agent with various queries"""
    
    # Initialize agent with GPT-3.5-turbo
    agent = CashFlowAgentExecutor(
        model_name="gpt-3.5-turbo",
        use_local=False  # Set to True to use Ollama's local model
    )
    
    # Test queries to demonstrate different capabilities
    test_queries = [
        # Basic cash flow analysis
        "Ph√¢n t√≠ch d√≤ng ti·ªÅn hi·ªán t·∫°i",
        
        # Future predictions with different timeframes
        "D·ª± b√°o d√≤ng ti·ªÅn 30 ng√†y t·ªõi",
        "D·ª± ƒëo√°n cash flow 60 ng√†y t·ªõi",
        
        # Specific analysis requests
        "So s√°nh doanh thu v√† chi ph√≠ 3 th√°ng g·∫ßn ƒë√¢y",
        "Ph√¢n t√≠ch xu h∆∞·ªõng d√≤ng ti·ªÅn v√† ƒë∆∞a ra c·∫£nh b√°o n·∫øu c√≥",
        
        # Combined analysis
        "ƒê√°nh gi√° t√¨nh h√¨nh hi·ªán t·∫°i v√† d·ª± b√°o 90 ng√†y t·ªõi",
        
        # Risk assessment
        "C√≥ d·∫•u hi·ªáu r·ªßi ro v·ªÅ d√≤ng ti·ªÅn kh√¥ng?",
        
        # Trend analysis
        "Xu h∆∞·ªõng d√≤ng ti·ªÅn ƒëang tƒÉng hay gi·∫£m?",
    ]
    
    print("üîÑ Testing Enhanced Cash Flow Agent")
    print("=" * 50)
    
    for i, query in enumerate(test_queries, 1):
        print(f"\n{i}. Query: {query}")
        print("-" * 30)
        
        try:
            # Run query through agent
            result = agent.invoke({"input": query})
            
            # Print response
            print("\nResponse:")
            print(result.get("output", "No output"))
            
        except Exception as e:
            print(f"‚ùå Error: {str(e)}")
        
        print("-" * 50)
    
    print("\n‚úÖ Testing completed!")

def compare_models():
    """Compare responses between OpenAI and local models"""
    
    # Test query for comparison
    test_query = "Ph√¢n t√≠ch d√≤ng ti·ªÅn hi·ªán t·∫°i v√† d·ª± b√°o 30 ng√†y t·ªõi"
    
    print("üîÑ Comparing Model Responses")
    print("=" * 50)
    
    # Test with OpenAI model
    print("\n1. Testing with gpt-5-nano:")
    try:
        openai_agent = CashFlowAgentExecutor(model_name="gpt-5-nano", use_local=False)
        result = openai_agent.invoke({"input": test_query})
        print(result.get("output", "No output"))
    except Exception as e:
        print(f"‚ùå Error with OpenAI model: {str(e)}")
    
    print("\n2. Testing with Local Llama2:")
    try:
        local_agent = CashFlowAgentExecutor(use_local=True)
        result = local_agent.invoke({"input": test_query})
        print(result.get("output", "No output"))
    except Exception as e:
        print(f"‚ùå Error with local model: {str(e)}")
    
    print("\n‚úÖ Comparison completed!")

if __name__ == "__main__":
    # Run basic tests
    test_cashflow_agent()
    
    # Uncomment to run model comparison
    # compare_models()